// медиазапросы
@mixin mq-w($mq_point, $v: min) {
    @media (#{$v}-width: $mq_point) { @content; }
}

// Проверка на наведение
@mixin hover {
    @media (hover: hover) { @content; }
}

@mixin calc($prop, $expre...) {
    #{$prop}: -webkit-calc(#{$expre});
    #{$prop}: -moz-calc(#{$expre});
    #{$prop}: calc(#{$expre});
}

// margin r, mardin l
@mixin mr_auto($pl: auto, $pr: 0, $calc: 0) {

    @if $pr == 0 and $calc == 0
    {
        margin-left: $pl;
        margin-right: $pl;
    }
    @else if $pl != auto and $pr == 0 and $calc == true
    {
        margin-left: calc(#{$pl});
        margin-right: calc(#{$pl});
    }
    @else if $pr != 0 and $calc == true
    {
        margin-left: calc(#{$pl});
        margin-right: calc(#{$pr});
    }
    @else
    {
        margin-left: $pl;
        margin-right: $pr;
    }
}

// padding r, padding l
@mixin pd_lr($pl: 1rem, $pr: 0, $calc: 0) {

    @if $pr == 0 and $calc == 0
    {
        padding-left: $pl;
        padding-right: $pl;
    }
    @else if $pr == 0 and $calc == true
    {
        padding-left: calc(#{$pl});
        padding-right: calc(#{$pl});
    }
    @else if $pr != 0 and $calc == true
    {
        padding-left: calc(#{$pl});
        padding-right: calc(#{$pr});
    }
    @else
    {
        padding-left: $pl;
        padding-right: $pr;
    }
}

// padding top, padding bottom
@mixin pd_tb($vt: 1rem, $vb: 0, $calc: 0) {
    
    @if $vb == 0 and $calc == 0
    {
        padding-top: $vt;
        padding-bottom: $vt;
    }
    @else if $vb == 0 and $calc == true
    {
        padding-top: calc(#{$vt});
        padding-bottom: calc(#{$vt});
    }
    @else if $vb != 0 and $calc == true
    {
        padding-top: calc(#{$vt});
        padding-bottom: calc(#{$vb});
    }
    @else
    {
        padding-top: $vt;
        padding-bottom: $vb;
    }
}

// Длина и высота
@mixin width-height($w, $h: 0, $calc: 0) {
    
    @if $h == 0 and $calc == 0
    {
        width: $w;
        height: $w;
    }
    @else if $h == 0 and $calc == true
    {
        width: calc(#{$w});
        height: calc(#{$w});
    }
    @else if $h != 0 and $calc == true
    {
        width: calc(#{$w});
        height: calc(#{$h});
    }
    @else
    {
        width: $w;
        height: $h;
    }
}

@mixin linear-gradient($angle, $color-stops...) {
    $_angle-with-vendor-prefix: "";
    $_angle: "";
    @if $angle == "to top" or $angle == "bottom" {
        $_angle-with-vendor-prefix: bottom;
        $_angle: to top;
    } @else if $angle == "to right" or $angle == "left" {
        $_angle-with-vendor-prefix: left;
        $_angle: to right;
    } @else if $angle == "to bottom" or $angle == "top" {
        $_angle-with-vendor-prefix: top;
        $_angle: to bottom;
    } @else if $angle == "to left" or $angle == "right" {
        $_angle-with-vendor-prefix: right;
        $_angle: to left;
    } @else if $angle == "to top right" or $angle == "bottom left" {
        $_angle-with-vendor-prefix: bottom left;
        $_angle: to top right;
    } @else if $angle == "to bottom right" or $angle == "top left" {
        $_angle-with-vendor-prefix: top left;
        $_angle: to bottom right;
    } @else if $angle == "to bottom left" or $angle == "top right" {
        $_angle-with-vendor-prefix: top right;
        $_angle: to bottom left;
    } @else if $angle == "to top left" or $angle == "bottom right" {
        $_angle-with-vendor-prefix: bottom right;
        $_angle: to top left;
    } @else {
        $_angle-with-vendor-prefix: $angle % 360;
        $_angle: (90 - $angle) % 360;
    }
    background: -webkit-linear-gradient($_angle-with-vendor-prefix, $color-stops);
    background: -moz-linear-gradient($_angle-with-vendor-prefix, $color-stops);
    background: -o-linear-gradient($_angle-with-vendor-prefix, $color-stops);
    background: linear-gradient($_angle, $color-stops);
}
@mixin text-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0,0,0,.7)) {
    text-shadow: $x $y $blur $color;
}
//----------------------------------------columns
@mixin columns($i: 2, $value: 24rem){
    -moz-columns: $value $i;
    -webkit-columns: $value $i;
    -o-columns: $value $i;
    columns: $value $i;
}
@mixin column-gap($value: 1.6rem){
    -moz-column-gap: $value;
    -webkit-column-gap: $value;
    column-gap: $value;
}
//---------------------------------------animation
@mixin transition($value...){
    -webkit-transition: $value;
    -moz-transition: $value;
    -ms-transition: $value;
    -o-transition: $value;
    animation: $value;
}

@mixin animation($value...){
    -webkit-animation: $value;
    -moz-animation: $value;
    -ms-animation: $value;
    -o-animation: $value;
    animation: $value;
}
@mixin animation-fill-mode($mode) {
    webkit-animation-fill-mode: $mode;
    animation-fill-mode: $mode;
}
@mixin keyframes($name){
    @-webkit-keyframes #{$name} {
        @content;
    }
    @-moz-keyframes #{$name} {
        @content;
    }
    @-ms-keyframes #{$name} {
        @content;
    }
    @-o-keyframes #{$name} {
        @content;
    }
    @keyframes #{$name} {
        @content;
    }
}
@mixin transform($value){
    -webkit-transform: $value;
    -moz-transform: $value;
    -ms-transform: $value;
    -o-transform: $value;
    transform: $value;
}
@mixin transform-origin($value){
    -webkit-transform-origin: $value;
    -moz-transform-origin: $value;
    -ms-transform-origin: $value;
    -o-transform-origin: $value;
    transform-origin: $value;
}

//---------------------------------------спинеры
@mixin spiner_ball-scale(
    
    $cl: darken(#ebf3f5, 10%),
    $size: 3em
){
    background-color: $cl;
    border-radius: 100%;
    display: inline-block;
    height: $size;
    width: $size;
    @include animation-fill-mode(both);
    @include animation(ball-scale 1s 0s ease-in-out infinite);
    @at-root {
        @include keyframes(ball-scale) {
            0% {
                @include transform(scale(0.0));
            }
            100% {
                @include transform(scale(1.0));
                opacity: 0;
            }
        }
    }
}

@mixin keyframes_loader-rotate {
    @include keyframes(loader-rotate) {
        0% {
            @include transform(
                rotate(0deg)
            );
        }

        100% {
            @include transform(
                rotate(360deg)
            );
        }
    }
}

@mixin loader02(
    $size: 48px,
    $color: lighten(black, 20%),
    $border-size: 6px,
    $duration: 1s,
    $align: null
) {
    width: $size;
    height: $size;
    border: $border-size solid rgba($color, 0.25);
    border-top-color: $color;
    border-radius: 50%;
    position: relative;
    
    @include animation(loader-rotate $duration linear infinite);
    
    @if ($align == center) {
        margin: 0 auto;
    }
    @if ($align == middle) {
        top: 50%;
        margin: -$size / 2 auto 0;
    }
    @at-root {
        @include keyframes_loader-rotate;
    }
}

//---------------------------------------Гриды

///*
//* Треугольник
//*/
@mixin arrow($direction, $color, $size){
    
    //display: block;
    height: 0;
    width: 0;

    @if $direction == 'top' {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-bottom: $size solid $color;
    } @else if $direction == 'right' {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-left: $size solid $color;
    } @else if $direction == 'bottom' {
        border-top: $size solid $color;
        border-right: $size solid transparent;
        border-left: $size solid transparent;
    } @else if $direction == 'left' {
        border-top: $size solid transparent;
        border-right: $size solid $color;
        border-bottom: $size solid transparent;
    } @else if $direction == 'top-left' {
        border-top: $size solid $color;
        border-right: $size solid transparent;
    } @else if $direction == 'top-right' {
        border-top: $size solid $color;
        border-left: $size solid transparent;
    } @else if $direction == 'bottom-left' {
        border-bottom: $size solid $color;
        border-right: $size solid transparent;
    } @else if $direction == 'bottom-right' {
        border-bottom: $size solid $color;
        border-left: $size solid transparent;
    }
}

///*
//* Меню гамбургер
//*/
@mixin gamburger(

    $w: 36px, // 1.8rem
    $h: 20px, // 1.1rem
    $h_item: 2px, // 0.15rem
    $cl: black,
    $class: 'close-js'
){
    position: relative;
    display: block;
    width: $w;
    height: $h;
    color: $cl;

    padding: ($h - $h_item) / 2 0;
    background-color: currentColor;
    background-clip: content-box;
    cursor: pointer;

    &:before,
    &:after
    {
        content: '';
        position: absolute;
        left: 0;
        width: 100%;
        height: $h_item;
        background-color: currentColor;
        @extend %transit;
        //@include transition(
        //top 0.3s ease 0s,
        //transform 0.3s ease 0.3s
        //);
    }
    &:before
    {
        top: 1px;
    }
    &:after
    {
        top: $h - $h_item - 1; // - 0.05
    }
    [type="checkbox"]:checked ~ &,
    //*:hover > &,
    .#{$class} &
    {
        background-color: transparent;
        top: -$h / 6;

        &:before,
        &:after
        {
            top: $h / 2 + $h_item / 2;
        }
        &:before
        {
            @include transform(
                rotate(-45deg)
                //scaleX(1.2)
            );
        }
        &:after
        {
            @include transform(
                rotate(45deg)
                //scaleX(1.2)
            );
        }
    }
}

///*
//* Иконка крестика закрытия
//*/
@mixin ico_close(
$cl:    #333,
$size:  32px,
$h_item: 2px
){
    display: inline-block;
    position: relative;
    width: $size;
    height: $size;
    cursor: pointer;

    @content;

    &:before,
    &:after
    {
        content: '';
        
        position: absolute;
        left: 0;
        top: $size / 2 - $h_item / 2;
        width: 100%;
        height: $h_item;
        background-color: $cl;
    }

    &:before
    {
        @include transform(rotate(45deg));
    }

    &:after
    {
        @include transform(rotate(-45deg));
    }
}

//------------------------------------------------
// Скрытие и показ элементов
@mixin hidden() {
    opacity: 0;
    visibility: hidden;
    //height: 0;
    //overflow: hidden;
}
@mixin visible() {
    opacity: 1;
    visibility: visible;
    //height: auto;
    //overflow: visible;
}

// Сокращение текста
@mixin text-overflow() {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
}

@mixin pd_lr_block($pd_lr_block: '0.6rem + 1.6vw'){
    padding-left: calc(#{$pd_lr_block});
    padding-right: calc(#{$pd_lr_block});
}
@mixin pd_tb_block($pd_tb_block: '1rem + 1.6vw'){
    padding-top: calc(#{$pd_tb_block});
    padding-bottom: calc(#{$pd_tb_block});
}

@mixin rhythm-margin($m: 1rem, $prop: bottom) {
    & > *:not(:empty):not(:last-child) {
        @if $m != 'auto' {
            margin-#{$prop}: $m;
        }
        @content;
    }
}

/**
 * Хлебные крошки
 */
@mixin list-breadcrumb(
    $cl: $cl_light,
    $cl_hver_link: $cl_light,
    $cl_hver_link-alias: $cl_grey
){
    color: $cl;

    > *
    {
        display: inline-block;

        &:not(:first-child)
        {
            &:before
            {
                content: '/';
                padding-right: 0.8rem;
            }
        }
    }

    @include rhythm-margin(0.6rem, right);

    &__link
    {
        border-bottom: 1px solid transparent;
        @extend %transit;

        &:not(span)
        {
            font-weight: 400;
        }

        &:not(span):hover
        {
            color: $cl_hver_link;
            border-color: $cl_hver_link;
        }

        &--alias
        {
            color: $cl_hver_link-alias;
        }
    }
}

// единица сетки экрана
@function precent-vw($n) { @return $n * 100vw; }
@function rem($size) {
    $remSize: $size / 14;
    @return $remSize * 1rem;
}